package com.fengxiaoshuai.datastructure;

public class BaseCode {
    // 栈:后进先出,先进后出。
    // 数据进入栈模型的过程称为:压/进栈。
    // 数据离开栈模型的过程称为:弹/出栈。

    // 队列:先进先出,后进后出。
    // 数据从后端进入队列模型的过程称为:入队列。
    // 数据从前端离开队列模型的过程称为:出队列。

    // 数组:查询快,增删慢的模型。
    // 查询速度快:查询数据通过地址值和索引定位,查询任意数据耗时相同。(元素在内存中是连续存储的)
    // 删除效率低:要将原始数据删除,同时后面每个数据前移。
    // 添加效率低:添加位置后的每个数据后移,再添加元素。

    // 链表:链表中的节点是独立的对象,在内存中是不连续的,每个节点包含数据组和下一个节点的地址。
    // 链表查询慢,无论查询哪个数据都要从头开始找。
    // 链表是一种增删快的模型(对比数组)

    // 如何避免并发修改异常:在使用迭代器或者是增强for遍历集合的过程中,不要使用集合的方法去添加或者删除元素即可。

}
