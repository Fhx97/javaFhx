package com.fengxiaoshuai;

public class ObjectMemory {
    // 从JDK8开始,取消方法区,新增元空间,把原来方法区的多张功能进行拆分。
    // 有的功能放到了堆中,有的功能放到了元空间。

    // 方法区:字节码文件加载时进入的内存
    // 栈内存:方法运行时所进入的内存,变量也是在这里
    // 堆内存: new 出来的东西会在这块内存中开辟空间并产生地址

    // 一个对象的内存图
    // 1.加载class文件
    // 2.申请局部变量
    // 3.在堆内存中的开辟一个空间
    // 4.默认初始化
    // 5.显示初始化
    // 6.构造方法初始化
    // 7.将堆内存的地址值赋值给左边的局部变量


    // 两个对象的内存图:class文件无需再次加载。


    // 两个引用指向同一个对象

    // 基本数据类型:栈内存中记录真实值(赋值给其他变量时,赋的真实值)
    // 引用数据类型:栈内存记录堆内存中的地址值(赋值给其他变量时,赋的是地址值,即两个变量指向同一地址空间)


    // this作用:区分局部变量和成员变量
    // this本质:所在方法调用者的地址值


    // 成员变量:类中方法外的变量(堆内存)
    // 局部变量:类中方法内的变量(栈内存)
    public static void main(String[] args) {
        int a = 3 ;
        System.out.println(a);
        int b = a;
        System.out.println(b);
        a = 4;
        System.out.println(a);
        System.out.println(b);
    }
}
