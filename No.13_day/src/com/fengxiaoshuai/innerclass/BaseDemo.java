package com.fengxiaoshuai.innerclass;

public class BaseDemo {
    // 内部类:在一个类的里面,再定义一个类。
    // 在A类的内部定义B类,B类就被称为内部类。
    // 内部类可以直接访问外部类的成员,包括私有。
    // 外部类要访问内部类的成员,必须创建对象。

    // 成员内部类:写在成员位置,属于外部类成员。
    // 静态内部类:只能访问外部类中的静态变量和静态方法,如果想要访问非静态的需要创建对象。
    // 局部内部类:将内部类定义在方法里面就叫做局部类,类似于方法里的局部变量。

    // 匿名内部类:隐藏了名字的内部类。
    // new 类名或者接口名(){重写方法;};
    // 当方法的参数是接口或者类时,以接口为例,可以传递这个接口的实现类对象。
    // 如果实现类只使用一次,就可以使用匿名内部类简化代码。
}
