package com.fengxiaoshuai.basecode;

public class BaseCode {
    /*
    * 线程
    * 操作系统能够进行运算调度的最小单位
    * 它被包含在进程之中,是进程中的实际运作单位
    * 简单地可以理解为:应用软件中相互独立,可以同时运行的功能
    * */

    /*
    * 进程
    * 程序的基本运行实体
    * */

    /*
    * 并发
    * 在同一时刻,有多个指令在单个CPU上交替执行
    * */

    /*
    * 并行
    * 在同一时刻,有多个指令在多个CPU上同时被执行
    * */

    /*
    * 线程生命周期
    * 新建(创建线程对象) -> 就绪(不停的抢CPU) -> 运行(运行代码) -> 死亡(线程死亡/变成垃圾)
    * 没有执行资格/没有执行权的线程(阻塞等待),sleep方法会让其睡眠
    * 线程状态还有阻塞、等待以及计时等待。
    * */

    /*
    * 生产者和消费者(等待唤醒机制)
    * 生产者消费者模式是一个十分经典的多线程协作的模式
    * 等待唤醒机制(阻塞队列方式实现)
    *
    * */

    /*
    *
    *
    * */

}
