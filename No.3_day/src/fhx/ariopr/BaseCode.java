package fhx.ariopr;public class BaseCode {
    public static void main(String[] args) {
        // 原码:十进制数据的二进制表现形式,最左边是符号位,0为正,1为负。
        // 利用原码进行计算,正数运算完全没有问题。
        // 如果是负数运算,结果就容易出差,实际运算方向跟正确运算方向是相反的。


        // 反码:为了解决原码不能进行负数计算而出现的。
        // 正数的反码不变,负数的反码在原码的基础上,符号位不变。数值取反,0变1,1变0。
        // 负数运算结果如果出现跨0情况,会跟实际结果有1的偏差。


        // 补码:为了解决反码进行负数计算出现跨0问题而出现的。
        // 正数的补码不变,负数的补码在反码的基础上+1。
        // 补码能记录一个特殊的值-128,该数据在一个字节下,没有原码和反码。
        // 计算机中的存储和计算都是以补码的形式进行的。

        System.out.println("加油,丰小帅！！！");
    }
}
