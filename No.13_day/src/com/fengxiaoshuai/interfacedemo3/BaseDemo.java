package com.fengxiaoshuai.interfacedemo3;

public class BaseDemo {
    // JDK8以后允许接口中新增的方法
    // 允许在接口中定义默认方法,需要使用default修饰(解决接口升级的问题)
    // 接口中默认方法的定义格式
    // 格式:public default 返回值类型 方法名(参数列表){}
    // 范例:public default void show(){}

    // 接口中默认方法需注意:
    // 默认方法不是抽象方法,所以不强制重写。但是如果被重写,重写的时候去掉default关键字。
    // public可以省略,default不能省略。
    // 如果实现了多个接口,多个接口中存在相同名字的默认方法,子类就必须对该方法进行重写。

    // JDK8用户允许在接口定义中定义静态方法,需要用static修饰
    // 静态方法定义格式:public static 返回值类型 方法名(参数列表){}
    // 示例: public static void show(){}

    // 接口中静态方法的注意事项:
    // 静态方法只能通过接口名调用,不能通过实现类名或者对象名调用
    // public可以省略,static不能省略。

    // 私有方法(普通和静态)。

    // 接口代表规则,是行为的抽象。想要哪个类拥有一个行为,就让这个类实现对应的接口就行。
    // 当一个方法的参数是接口时,可以传递接口所有实现类的对象,这种方法称之为接口多态。

    // 适配器设计模式
    // 编写中间类XXXAdapter,实现对应接口
    // 对接口中的抽象方法进行空实现
    // 让真正实现类继承中间类,并重写需要用的方法
    // 为避免其他类创建适配器的对象,中间的适配器类用abstract进行修饰

}
